<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Managing containerized system services with Podman</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-uAKazZ6mQo/" /><category term="container" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="docker" scheme="searchisko:content:tags" /><category term="fedora" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="service" scheme="searchisko:content:tags" /><category term="services" scheme="searchisko:content:tags" /><category term="systemctl" scheme="searchisko:content:tags" /><category term="systemd" scheme="searchisko:content:tags" /><author><name>Alessandro Arrichiello</name></author><id>searchisko:content:id:jbossorg_blog-managing_containerized_system_services_with_podman</id><updated>2018-11-29T12:00:16Z</updated><published>2018-11-29T12:00:16Z</published><content type="html">&lt;p&gt;In this article, I discuss &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;, but look at them from another angle. We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. Looking back at the origins of containers, we&amp;#8217;ve mostly forgotten that containers were born for simplifying application distribution on standalone systems.&lt;/p&gt; &lt;p&gt;In this article, we&amp;#8217;ll talk about the use of containers as the perfect medium for installing applications and services on a &lt;a href="https://developers.redhat.com/products/rhel/"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) system. Using containers doesn&amp;#8217;t have to be complicated, I&amp;#8217;ll show how to run MariaDB, Apache HTTPD, and WordPress in containers, while managing those containers like any other service, through systemd and &lt;code&gt;systemctl.&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Additionally, we&amp;#8217;ll explore Podman, which Red Hat has developed jointly with the Fedora community. If you don&amp;#8217;t know what Podman is yet, see my previous article, &lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (Red Hat Enterprise Linux 7.6)&lt;/a&gt; and Tom Sweeney&amp;#8217;s &lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-515827"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Container Catalog&lt;/h2&gt; &lt;p&gt;First of all, let&amp;#8217;s explore the containers that are available for Red Hat Enterprise Linux through the &lt;a href="https://access.redhat.com/containers/"&gt;Red Hat Container Catalog &lt;/a&gt;&lt;a href="https://access.redhat.com/containers/"&gt;(access.redhat.com/containers)&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-542087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png" alt="" width="1920" height="1150" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png 1920w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-768x460.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png 1024w" sizes="(max-width: 1920px) 100vw, 1920px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;By clicking &lt;strong&gt;Explore The Catalog&lt;/strong&gt;, we&amp;#8217;ll have access to the full list of containers categories and products available in Red Hat Container Catalog.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png"&gt;&lt;img class=" alignnone size-full wp-image-535017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" alt="Exploring the available containers" width="640" height="111" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-300x52.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-768x133.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png 1382w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clicking &lt;strong&gt;Red Hat Enterprise Linux&lt;/strong&gt; will bring us to the RHEL section, displaying all the available containers images for the system:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png"&gt;&lt;img class=" alignnone size-full wp-image-535027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" alt="Available RHEL containers" width="640" height="566" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-300x265.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-768x678.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png 1372w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the time of writing this article, in the RHEL category there were more than 70 containers images, ready to be installed and used on RHEL 7 systems.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s choose some container images and try them on a Red Hat Enterprise Linux 7.6 system. For demo purposes, we&amp;#8217;ll try to use Apache HTTPD + PHP  and the MariaDB database for a WordPress blog.&lt;/p&gt; &lt;h2&gt;Install a containerized service&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start by installing our first containerized service for setting up a MariaDB database that we&amp;#8217;ll need for hosting the WordPress blog&amp;#8217;s data.&lt;/p&gt; &lt;p&gt;As a prerequisite for installing containerized system services, we need to install the utility named Podman on our Red Hat Enterprise Linux 7 system:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# subscription-manager repos --enable rhel-7-server-rpms --enable rhel-7-server-extras-rpms [root@localhost ~]# yum install podman&lt;/pre&gt; &lt;p&gt;As explained in my previous article, Podman complements Buildah and Skopeo by offering an experience similar to the Docker command line: allowing users to run standalone (non-orchestrated) containers. And Podman doesn’t require a daemon to run containers and pods, so we can easily say goodbye to big fat daemons.&lt;/p&gt; &lt;p&gt;By installing Podman, you&amp;#8217;ll see that Docker is no longer a required dependency!&lt;/p&gt; &lt;p&gt;As suggested by the Red Hat Container Catalog&amp;#8217;s MariaDB page, we can run the following commands to get the things done (we&amp;#8217;ll replace, of course, &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/mariadb-102-rhel7 Trying to pull registry.access.redhat.com/rhscl/mariadb-102-rhel7...Getting image source signatures Copying blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d 72.21 MB / 72.21 MB [======================================================] 9s Copying blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 1.21 KB / 1.21 KB [========================================================] 0s Copying blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f 6.47 MB / 6.47 MB [========================================================] 0s Copying blob sha256:5756ac03faa5b5fb0ba7cc917cdb2db739922710f885916d32b2964223ce8268 58.82 MB / 58.82 MB [======================================================] 7s Copying config sha256:346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 6.77 KB / 6.77 KB [========================================================] 0s Writing manifest to image destination Storing signatures 346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 [root@localhost ~]# podman images REPOSITORY TAG IMAGE ID CREATED SIZE registry.access.redhat.com/rhscl/mariadb-102-rhel7 latest 346b26138397 2 weeks ago 449MB&lt;/pre&gt; &lt;p&gt;After that, we can look at the &lt;a href="https://access.redhat.com/containers/?tab=tech-details&amp;#38;platform=systemimages#/registry.access.redhat.com/rhscl/mariadb-102-rhel7"&gt;Red Hat Container Catalog page&lt;/a&gt; for details on the needed variables for starting the MariaDB container image.&lt;/p&gt; &lt;p&gt;Inspecting the previous page, we can see that under &lt;em&gt;Labels&lt;/em&gt;, there is a label named &lt;em&gt;usage&lt;/em&gt; containing an example string for running this container image:&lt;/p&gt; &lt;pre&gt;usage docker run -d -e MYSQL_USER=user -e MYSQL_PASSWORD=pass -e MYSQL_DATABASE=db -p 3306:3306 rhscl/mariadb-102-rhel7&lt;/pre&gt; &lt;p&gt;After that we need some other information about our container image: the &amp;#8220;&lt;em&gt;user ID running inside the container&lt;/em&gt;&amp;#8221; and the &amp;#8220;&lt;em&gt;persistent volume location to attach&lt;/em&gt;&amp;#8220;:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep User "User": "&lt;strong&gt;27&lt;/strong&gt;", [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 Volume "Volumes": { "&lt;i&gt;/var/lib/mysql/data&lt;/i&gt;": {} [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "&lt;i&gt;3306&lt;/i&gt;/tcp": {}&lt;/pre&gt; &lt;p&gt;At this point, we have to create the directories that will handle the container&amp;#8217;s data; remember that containers are ephemeral by default. Then we set also the right permissions:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/var/lib/mysql/data [root@localhost ~]# chown 27:27 /opt/var/lib/mysql/data&lt;/pre&gt; &lt;p&gt;Then we can set up our &lt;code&gt;systemd&lt;/code&gt; unit file for handling the database. We&amp;#8217;ll use a unit file similar to the one prepared in the previous article:&lt;/p&gt; &lt;pre class="notranslate"&gt;[root@localhost ~]# cat /etc/systemd/system/mariadb-service.service [Unit] Description=Custom MariaDB Podman Container After=network.target [Service] Type=simple TimeoutStartSec=5m ExecStartPre=-/usr/bin/podman rm "mariadb-service" ExecStart=/usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host registry.access.redhat.com/rhscl/mariadb-102-rhel7 ExecReload=-/usr/bin/podman stop "mariadb-service" ExecReload=-/usr/bin/podman rm "mariadb-service" ExecStop=-/usr/bin/podman stop "mariadb-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s take apart our &lt;code&gt;ExecStart&lt;/code&gt; command and analyze how it&amp;#8217;s built:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;/usr/bin/podman run --name mariadb-service&lt;/code&gt; says we want to run a container that will be named &lt;code&gt;mariadb-service&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z&lt;/code&gt;  says we want to map the just-created data directory to the one inside the container. The &lt;code&gt;Z&lt;/code&gt; option informs Podman to map correctly the SELinux context for avoiding permissions issues.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress&lt;/code&gt; identifies the additional environment variables to use with our MariaDB container. We&amp;#8217;re defining the username, the password, and the database name to use.&lt;/li&gt; &lt;li&gt;&lt;code&gt;--net host&lt;/code&gt; maps the container&amp;#8217;s network to the RHEL host.&lt;/li&gt; &lt;li&gt;&lt;code&gt;registry.access.redhat.com/rhscl/mariadb-102-rhel7&lt;/code&gt; specifies the container image to use.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We can now reload the &lt;code&gt;systemd&lt;/code&gt; catalog and start the service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start mariadb-service [root@localhost ~]# systemctl status mariadb-service mariadb-service.service - Custom MariaDB Podman Container Loaded: loaded (/etc/systemd/system/mariadb-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 10:47:07 EST; 22s ago Process: 16436 ExecStartPre=/usr/bin/podman rm mariadb-service ​(code=exited, status=0/SUCCESS) Main PID: 16452 (podman) CGroup: /system.slice/mariadb-service.service └─16452 /usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host regist... Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140276291061504 [Note] InnoDB: Buffer pool(s) load completed at 181108 15:47:14 Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Plugin 'FEEDBACK' is disabled. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Server socket created on IP: '::'. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry 'root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry '@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'proxies_priv' entry '@% root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Reading of all Master_info entries succeded Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Added new Master_info '' to hash table Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] /opt/rh/rh-mariadb102/root/usr/libexec/mysqld: ready for connections. Nov 08 10:47:14 localhost.localdomain podman[16452]: Version: '10.2.8-MariaDB' socket: '/var/lib/mysql/mysql.sock' port: 3306 MariaDB Server&lt;/pre&gt; &lt;p&gt;Perfect! MariaDB is running, so we can now start working on the Apache HTTPD + PHP container for our WordPress service.&lt;/p&gt; &lt;p&gt;First of all, let&amp;#8217;s pull the right container from Red Hat Container Catalog:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/php-71-rhel7 Trying to pull registry.access.redhat.com/rhscl/php-71-rhel7...Getting image source signatures Skipping fetch of repeat blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d Skipping fetch of repeat blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 Skipping fetch of repeat blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f Copying blob sha256:12829a4d5978f41e39c006c78f2ecfcd91011f55d7d8c9db223f9459db817e48 82.37 MB / 82.37 MB [=====================================================] 36s Copying blob sha256:14726f0abe4534facebbfd6e3008e1405238e096b6f5ffd97b25f7574f472b0a 43.48 MB / 43.48 MB [======================================================] 5s Copying config sha256:b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b 9.11 KB / 9.11 KB [========================================================] 0s Writing manifest to image destination Storing signatures b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b&lt;/pre&gt; &lt;p&gt;We can now look through this container image to get some details:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep User "User": "1001", "User": "1001" [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 Volume [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "8080/tcp": {},&lt;/pre&gt; &lt;p&gt;As you can see from the previous commands, we got no volume from the container details. Are you asking why? It&amp;#8217;s because this container image, even if it&amp;#8217;s part of RHSCL (formerly known as Red Hat Software Collections), has been prepared for working with the Source-to-Image (S2I) builder. For more info on the S2I builder, please take a look at its &lt;a href="https://github.com/openshift/source-to-image"&gt;GitHub project page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Unfortunately, at this moment, the S2I utility is strictly dependent on Docker, but for demo purposes, we would like to avoid it..!&lt;/p&gt; &lt;p&gt;So moving back to our issue, what can we do for guessing the right folder to mount on our PHP container? We can easily guess the right location by looking at all the environment variables for the container image, where we will find &lt;code&gt;APP_DATA=/opt/app-root/src&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s create this directory with the right permissions; we&amp;#8217;ll also download the latest package for our WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/app-root/src/ [root@localhost ~]# curl -o latest.tar.gz https://wordpress.org/latest.tar.gz [root@localhost ~]# tar -vxf latest.tar.gz [root@localhost ~]# mv wordpress/* /opt/app-root/src/ [root@localhost ~]# chown 1001 -R /opt/app-root/src&lt;/pre&gt; &lt;p&gt;We&amp;#8217;re now ready for creating our Apache &lt;code&gt;http&lt;/code&gt; + PHP &lt;code&gt;systemd&lt;/code&gt; unit file:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# cat /etc/systemd/system/httpdphp-service.service [Unit] Description=Custom httpd + php Podman Container After=mariadb-service.service [Service] Type=simple TimeoutStartSec=30s ExecStartPre=-/usr/bin/podman rm "httpdphp-service" ExecStart=/usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run ExecReload=-/usr/bin/podman stop "httpdphp-service" ExecReload=-/usr/bin/podman rm "httpdphp-service" ExecStop=-/usr/bin/podman stop "httpdphp-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;We need then to reload the &lt;code&gt;systemd&lt;/code&gt; unit files and start our latest service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start httpdphp-service [root@localhost ~]# systemctl status httpdphp-service httpdphp-service.service - Custom httpd + php Podman Container Loaded: loaded (/etc/systemd/system/httpdphp-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 12:14:19 EST; 4s ago Process: 18897 ExecStartPre=/usr/bin/podman rm httpdphp-service (code=exited, status=125) Main PID: 18913 (podman) CGroup: /system.slice/httpdphp-service.service └─18913 /usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 50-mpm-tuning.conf ... Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 40-ssl-certs.sh ... Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:20 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:20.925637 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017164 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017380 2018] [http2:warn] [pid 1] AH10034: The mpm module (prefork.c) is not supported by mod_http2. The mpm determines how things are ... Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.018506 2018] [lbmethod_heartbeat:notice] [pid 1] AH02282: No slotmem from mod_heartmonitor Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101823 2018] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.27 (Red Hat) OpenSSL/1.0.1e-fips configured -- resuming normal operations Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101849 2018] [core:notice] [pid 1] AH00094: Command line: 'httpd -D FOREGROUND' Hint: Some lines were ellipsized, use -l to show in full.&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s open the 8080 port on our system&amp;#8217;s firewall for connecting to our brand new WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# firewall-cmd --permanent --add-port=8080/tcp [root@localhost ~]# firewall-cmd --add-port=8080/tcp&lt;/pre&gt; &lt;p&gt;We can surf to our Apache web server:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png"&gt;&lt;img class=" alignnone size-full wp-image-535947 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png" alt="Apache web server" width="688" height="371" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png 1677w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png 1024w" sizes="(max-width: 688px) 100vw, 688px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Start the installation process, and define all the needed details:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png"&gt;&lt;img class=" alignnone size-full wp-image-535957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png" alt="Start the installation process" width="700" height="395" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png 1567w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-768x433.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png 1024w" sizes="(max-width: 700px) 100vw, 700px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And finally, run the installation!&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png"&gt;&lt;img class=" alignnone size-full wp-image-535977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png" alt="Run the installation" width="701" height="280" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png 1026w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-768x306.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the end, we should reach out our brand new blog, running on Apache &lt;code&gt;httpd&lt;/code&gt; + PHP backed by a great MariaDB database!&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-535967 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png" alt="" width="701" height="552" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png 1617w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-300x236.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-768x605.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all folks; may containers be with you!&lt;/p&gt; &lt;h2 class="section-subheading-title"&gt;&lt;/h2&gt; &lt;h2&gt;About Alessandro&lt;/h2&gt; &lt;p&gt;&lt;img class="bio-img-display" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/profile_picture-300x300.jpg" alt="Alessandro Arrichiello" align="left" /&gt;&lt;/p&gt; &lt;p class="author-info selectionShareable"&gt;Alessandro Arrichiello is a Solution Architect for Red Hat Inc. He has a passion for GNU/Linux systems, which began at age 14 and continues today. He worked with tools for automating Enterprise IT: configuration management and continuous integration through virtual platforms. He’s now working on distributed cloud environment involving PaaS (OpenShift), IaaS (OpenStack) and Processes Management (CloudForms), Containers building, instances creation, HA services management, workflows build.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#038;title=Managing%20containerized%20system%20services%20with%20Podman" data-a2a-url="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/" data-a2a-title="Managing containerized system services with Podman"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-uAKazZ6mQo" height="1" width="1" alt=""/&gt;</content><summary>In this article, I discuss containers, but look at them from another angle. We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like Kubernetes. Looking back at the origins of containers, we’ve mostly forgotten that containers were born for simplifying application distribution on standalone systems. In this articl...</summary><dc:creator>Alessandro Arrichiello</dc:creator><dc:date>2018-11-29T12:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/</feedburner:origLink></entry><entry><title>Get a sneak peek into the future of Hibernate Search with 6.0.0.Alpha1!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZkGRRoSrSyc/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="lucene" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-get_a_sneak_peek_into_the_future_of_hibernate_search_with_6_0_0_alpha1</id><updated>2018-11-29T10:29:03Z</updated><published>2018-11-29T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just published Hibernate Search 6.0.0.Alpha1, the first release for the next major version of Hibernate Search.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This version is not suitable for production due to its limitations and to the fact APIs are still unstable. However, it’s a great way to get a feeling of where Hibernate Search is going and give us your feedback.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-started"&gt;&lt;a class="anchor" href="#getting-started"&gt;&lt;/a&gt;Getting started&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to dive right in, a good starting point is the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#getting-started"&gt;getting started guide&lt;/a&gt; included in the reference documentation.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31657"&gt;release notes&lt;/a&gt;. Be warned, though: there is a lot in there. You may find the summary below easier to process.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="preview-status"&gt;&lt;a class="anchor" href="#preview-status"&gt;&lt;/a&gt;Preview status&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6.0 is currently a &lt;strong&gt;technology preview&lt;/strong&gt; and is not ready for production.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While the core of Hibernate Search 6 is there, there are still a lot of limitations:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Features are partially implemented or simply missing. For example, you cannot index a &lt;code&gt;Double&lt;/code&gt; property yet, you cannot configure custom Lucene directories, you cannot ignore bridges in the predicate DSL, and so on.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;APIs are not considered stable yet.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The low-level parts of Hibernate Search 5 that improve its efficiency haven’t been ported to Hibernate Search 6 yet. This results in obvious performance bottlenecks, such as all the indexing works from a multi-threaded application being executed one after another and without any form of batching.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The exact features that are currently implemented and expected to work will be added to the reference documentation as new Alpha versions are released, but to sum up, here is what you can start to play with:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;ORM integration:&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Mapping of entities using either annotation mapping or programmatic mapping. However, we do not offer all the options that were available in Search 5 (yet), and we do not support all the data types (yet).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Automatic indexing of ORM entities as they are persisted within a transaction (enabled automatically if Hibernate Search is in your classpath and the entity is mapped).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Search for ORM entities using their Hibernate Search index, and retrieving managed entities as results. However, we do not offer many options regarding how the entities are retrieved and initialized (yet).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Custom, user-defined type bridges, property bridges or value bridges. However, the API to retrieve information from POJOs is currently quite cumbersome: we know that and will work on a lighter API (see &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3297"&gt;HSEARCH-3297&lt;/a&gt;, &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3298"&gt;HSEARCH-3298&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Search DSL&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;All the predicates listed in &lt;code&gt;org.hibernate.search.engine.search.dsl.predicate.SearchPredicateFactoryContext&lt;/code&gt;. However, we do not offer all the options that were available in Search 5 (yet).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All the sorts listed in &lt;code&gt;org.hibernate.search.engine.search.dsl.sort.SearchSortContainerContext&lt;/code&gt;. However, we do not offer all the options that were available in Search 5 (yet).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All the projections listed in &lt;code&gt;org.hibernate.search.engine.search.dsl.projection.SearchProjectionFactoryContext&lt;/code&gt;. However, we do not offer all the options that were available in Search 5 (yet).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="orm-version"&gt;&lt;a class="anchor" href="#orm-version"&gt;&lt;/a&gt;ORM version&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6 still relies on ORM 5.3 at the moment, because it requires features that are not yet implemented in ORM 6 (still in development).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="lucene-7"&gt;&lt;a class="anchor" href="#lucene-7"&gt;&lt;/a&gt;Lucene 7&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Lucene backend now uses Lucene 7.5.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="elasticsearch-6"&gt;&lt;a class="anchor" href="#elasticsearch-6"&gt;&lt;/a&gt;Elasticsearch 6&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Elasticsearch backend now works with Elasticsearch 5.6 or 6.5. Support for older versions of Elasticsearch was dropped.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="api-refresh"&gt;&lt;a class="anchor" href="#api-refresh"&gt;&lt;/a&gt;API refresh&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A lot of APIs have been changed, for multiple reasons.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="no-more-lucene-in-hibernate-search-apis"&gt;&lt;a class="anchor" href="#no-more-lucene-in-hibernate-search-apis"&gt;&lt;/a&gt;No more Lucene in Hibernate Search APIs&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search APIs now abstract from the Lucene APIs, so that alternative backends such as Elasticsearch can be used without having Lucene on your classpath.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This should also allow us to upgrade the Lucene version more easily: in Search 5, as Lucene was "part of" our APIs, we were severely limited when we wanted to upgrade to a newer Lucene version, because any breaking change in Lucene could mean a breaking change for our users, too. Now that using Lucene APIs is no longer necessary to use Hibernate Search, upgrades should be faster.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-search-dsl"&gt;&lt;a class="anchor" href="#new-search-dsl"&gt;&lt;/a&gt;New Search DSL&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Search DSL is brand new, with several improvements:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Ability to use lambdas for more concise query definition, even when queries are complex.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Type-safe projections thanks to the brand new projection DSL.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Injection of native predicates (&lt;code&gt;org.apache.lucene.search.Query&lt;/code&gt;, JSON for Elasticsearch) within DSL-created predicates. This is not new for the Lucene integration, but it is for the Elasticsearch integration. See &lt;code&gt;org.hibernate.search.engine.search.dsl.predicate.SearchPredicateFactoryContext.extension(SearchPredicateFactoryContextExtension&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;code&gt;org.hibernate.search.backend.elasticsearch.ElasticsearchExtension.get()&lt;/code&gt; and &lt;code&gt;org.hibernate.search.backend.lucene.LuceneExtension.get()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here is an example of what running a search query in Search 6 looks like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;FullTextEntityManager fullTextEntityManager = Search.getFullTextEntityManager( entityManager ); FullTextQuery&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;&amp;gt; query = fullTextEntityManager.search( &lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class ).query() .asEntity() .predicate( factory -&amp;gt; factory.match() .onFields( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;title&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;authors.name&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .matching( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Refactoring: Improving the Design of Existing Code&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .toPredicate() ) .build(); &lt;span style="color:#0a8;font-weight:bold"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;&amp;gt; result = query.getResultList();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And projections to custom beans look like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;FullTextEntityManager fullTextEntityManager = Search.getFullTextEntityManager( entityManager ); FullTextSearchTarget&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;&amp;gt; target = fullTextEntityManager.search( &lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class ); FullTextQuery&amp;lt;MyProjectionBean&amp;gt; query = target.query() .asProjection( searchTarget.projection().composite( MyProjectionBean::&lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt;, searchTarget.projection().field( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;id_stored&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Long&lt;/span&gt;.class ).toProjection(), searchTarget.projection().field( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;title&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt;.class ).toProjection() ).toProjection() ) .predicate( factory -&amp;gt; factory.match() .onFields( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;title&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;authors.name&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .matching( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Refactoring: Improving the Design of Existing Code&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .toPredicate() ) .build(); &lt;span style="color:#0a8;font-weight:bold"&gt;List&lt;/span&gt;&amp;lt;MyProjectionBean&amp;gt; result = query.getResultList();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="bridge-2.0"&gt;&lt;a class="anchor" href="#bridge-2.0"&gt;&lt;/a&gt;Bridge 2.0&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The bridge APIs had to change as part of the API refresh, so we took this opportunity to overhaul bridge APIs to make bridges more powerful.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new Bridge APIs are completely different, but with a lot of improvements:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Custom (user-defined) bridge annotations, allowing to pass type-safe parameters, and not just strings.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Better support for dirty checking optimization in bridges (in &lt;code&gt;TypeBridge&lt;/code&gt; in particular), by allowing bridges to declare what parts of the entity they use.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Predicates on non-String fields will work without having to bypass bridges (&lt;code&gt;.ignoreFieldBridge()&lt;/code&gt;) like in Search 5.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;And more!&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="easier-to-use-automatic-indexing"&gt;&lt;a class="anchor" href="#easier-to-use-automatic-indexing"&gt;&lt;/a&gt;Easier to use automatic indexing&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Automatic indexing improvements are not limited to bridges: &lt;code&gt;@IndexedEmbedded&lt;/code&gt; is easier to configure properly in Search 6, too.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To be precise, changes on indexed-embedded entities trigger reindexing of the "embedding" entity automatically, and annotating the inverse side of the association with &lt;code&gt;@ContainedIn&lt;/code&gt; is no longer needed in most cases. A mapping error will be reported when the inverse side of the association cannot be resolved.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="runtime-joins"&gt;&lt;a class="anchor" href="#runtime-joins"&gt;&lt;/a&gt;Runtime joins&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6.0 introduces "nested" fields and predicates, similar to the feature with the same name in Elasticsearch.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;See &lt;code&gt;org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded.storage&lt;/code&gt; and &lt;code&gt;org.hibernate.search.engine.search.dsl.predicate.SearchPredicateFactoryContext.nested()&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="migrating-from-search-5"&gt;&lt;a class="anchor" href="#migrating-from-search-5"&gt;&lt;/a&gt;Migrating from Search 5&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As mentioned above, Search 6 breaks many APIs, so migrating older projects will be more work than usual. The &lt;a href="http://hibernate.org/search/documentation/migrate/6.0/"&gt;migration guide&lt;/a&gt; will be completed as we release new versions and the APIs get more and more stable, but for now we recommend to only test Search 6 on small projects.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Ultimately, we intend to provide additional "compatibility" modules that will allow you to use the Search 5 APIs with Search 6 under the hood. However, our goal is not full backward compatibility: for some features that changed dramatically, it may not be possible to use the Search 5 APIs anymore. The main purpose of this compatibility layer will be to spread the migration effort: you will have to change your Maven dependencies, configuration and more complex mappings/queries immediately, but you will be able to delay the more repetitive parts of the migration work (simple queries, simple entity mappings) to later.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Finally, for those who cannot, or do not want to, spend the time required to migrate, we intend to continue maintenance releases (= bugfixes) of Hibernate Search 5.x: no end-of-life date has been set at the moment.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on the &lt;a href="http://hibernate.org/search/releases/6.0/#get-it"&gt;dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that, if you want to try Hibernate Search 6, a good starting point is the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#getting-started"&gt;getting started guide&lt;/a&gt; included in the reference documentation.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZkGRRoSrSyc" height="1" width="1" alt=""/&gt;</content><summary>We just published Hibernate Search 6.0.0.Alpha1, the first release for the next major version of Hibernate Search. This version is not suitable for production due to its limitations and to the fact APIs are still unstable. However, it’s a great way to get a feeling of where Hibernate Search is going and give us your feedback. Getting started If you want to dive right in, a good starting point is t...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2018-11-29T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/29/hibernate-search-6-0-0-Alpha1/</feedburner:origLink></entry><entry><title>Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-rjfT8pvOUY/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="OpenShift Connector" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Mohit Suman</name></author><id>searchisko:content:id:jbossorg_blog-announcing_the_red_hat_openshift_extension_for_visual_studio_code_public_preview</id><updated>2018-11-28T14:00:02Z</updated><published>2018-11-28T14:00:02Z</published><content type="html">&lt;p&gt;We are extremely pleased to announce that the preview release of the &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; extension for Visual Studio Code is now available. You can download the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; extension from the marketplace or install it directly from the extension gallery in Visual Studio Code.&lt;/p&gt; &lt;p&gt;This article provides describes the features and benefits of the extension and provides installation details. It also provides a demo of how using the extension improves the end-to-end experience of developing and deploying Spring Boot applications to local OpenShift cluster.&lt;/p&gt; &lt;h2&gt;&lt;span id="more-537657"&gt;&lt;/span&gt;&lt;/h2&gt; &lt;h2&gt;Benefits of using the extension&lt;/h2&gt; &lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; is a container application platform that brings the power of &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; to the enterprise. Regardless of the applications architecture, OpenShift lets you easily and quickly build, develop, and deploy in nearly any infrastructure, public or private.&lt;/p&gt; &lt;p&gt;Therefore, whether it’s on-premises, in a public cloud, or hosted, you have an award-winning platform to get your next big idea to market ahead of your competition.&lt;/p&gt; &lt;p&gt;Using OpenShift Connector, you can interact with Red Hat OpenShift using a local instance of OpenShift clusters such as minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;. Leveraging the OpenShift Application Explorer view, you can improve the end-to-end experience of developing applications.&lt;/p&gt; &lt;p&gt;The extension enables you to perform all this directly using Visual Studio Code and removes the complexity of memorizing some fairly complicated CLI commands.&lt;/p&gt; &lt;h2&gt;Developer use-case&lt;/h2&gt; &lt;p&gt;On a developer workstation, when you load a Spring Boot project, the language support detection automatically proposes to load a Spring Boot language support extension and suggests downloading and installing the OpenShift Connector. You can install the recommended extension in Visual Studio Code.&lt;/p&gt; &lt;p&gt;Therefore, once the OpenShift Connector is installed, OpenShift Application View is enabled on the Explorer panel in Visual Studio Code. Then, you can access the view and connect to a running OpenShift cluster and perform the required operations.&lt;/p&gt; &lt;h2&gt;Demo&lt;/h2&gt; &lt;p&gt;Here is a working &lt;a href="https://www.youtube.com/watch?v=XIHLbUvGuFM" target="_blank" rel="noopener"&gt;demo &lt;/a&gt;of the end-to-end experience of developing and deploying Spring Boot applications to a local OpenShift cluster using the extension. This demo aims to simplify the OpenShift experience for Visual Studio developers. For detailed installation and usage information, please refer to the &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/README.md"&gt;readme&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/XIHLbUvGuFM?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;:&lt;em&gt; In this Preview release, we support only Java and Node.JS components. We will be supporting other languages in future releases.&lt;/em&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;First, you will need to install &lt;a title="https://code.visualstudio.com/download" href="https://code.visualstudio.com/download"&gt;Visual Studio Code&lt;/a&gt; 1.12.0 or later.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To install the extension with the latest version of Visual Studio Code, bring up the Visual Studio Code Command Palette (press F1).&lt;/li&gt; &lt;li&gt;Type &lt;code&gt;install&lt;/code&gt; and &lt;strong&gt;choose Extensions: Install Extensions&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;In the&lt;strong&gt; Search Extensions in Marketplace&lt;/strong&gt; text box, type &lt;code&gt;OpenShift&lt;/code&gt;. Find the &lt;code&gt;OpenShift Connector&lt;/code&gt; extension published by Red Hat and click the&lt;strong&gt; Install&lt;/strong&gt; button.&lt;/li&gt; &lt;li&gt;Subsequently, you should reload Visual Studio Code and there will be an OpenShift Icon in the Explorer View.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif"&gt;&lt;img class="attachment-266x266 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif" alt="OpenShift Connector installation demo" width="975" height="580" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Dependencies&lt;/h2&gt; &lt;p&gt;This extension uses two CLI tools to interact with an OpenShift cluster:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The OpenShift client tool: &lt;a href="https://github.com/openshift/origin/releases" target="_blank" rel="noopener"&gt;oc&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The OpenShift Do tool: &lt;a href="https://github.com/redhat-developer/odo/releases" target="_blank" rel="noopener"&gt;odo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If &lt;code&gt;oc&lt;/code&gt; and &lt;code&gt;odo&lt;/code&gt; are located in a directory contained in your PATH, they will be used automatically. If they aren&amp;#8217;t present in your PATH, the extension will prompt you to download and install them.&lt;/p&gt; &lt;h2&gt;The extension in action&lt;/h2&gt; &lt;h3&gt;Connecting to your OpenShift instance&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;Start the local OpenShift instance using minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;After the extension is installed in Visual Studio Code, it will prompt you to download the required dependencies (&lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;The OpenShift Application Explorer view is activated once you click the OpenShift icon in the Explorer View.&lt;/li&gt; &lt;li&gt;You then need to log in to the running OpenShift cluster ( &lt;img class=" alignnone wp-image-540777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" alt="" width="12" height="12" /&gt; &amp;#8211; Log in to Cluster).&lt;/li&gt; &lt;li&gt;Provide the cluster URL to connect to the running instance of OpenShift.&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png"&gt;&lt;img class=" alignnone wp-image-540787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png" alt="logging in to OpenShift" width="845" height="343" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png 3225w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-768x311.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png 1024w" sizes="(max-width: 845px) 100vw, 845px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Now you can log in to the server using the following methods : &lt;ul&gt; &lt;li&gt;Credentials: Log in to the given server with the given credentials (basic auth).&lt;/li&gt; &lt;li&gt;Token: Log in to the given server with the given credentials (token).&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 60px;"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png"&gt;&lt;img class=" alignnone wp-image-540807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png" alt="OpenShift login options" width="748" height="125" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png 1482w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-300x50.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-768x129.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png 1024w" sizes="(max-width: 748px) 100vw, 748px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;7. OpenShift Application Explorer will display the OpenShift cluster in the Tree View.&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;8. Now you can perform the necessary operations in the connected cluster from the extension directly without looking back and forth to the command line.&lt;/p&gt; &lt;h3&gt;Working with OpenShift&lt;/h3&gt; &lt;p&gt;Once the extension is connected to the OpenShift clusters, you can perform operations in OpenShift and build/deploy applications. Note:  &lt;em&gt;This extension currently supports a local OpenShift cluster running using &lt;a href="https://github.com/minishift/minishift/releases" target="_blank" rel="noopener"&gt;minishift&lt;/a&gt; or &lt;a href="https://developers.redhat.com/products/cdk/download/" target="_blank" rel="noopener"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;h4&gt;Actions available inside an OpenShift cluster&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog components&lt;/code&gt; – Lists all available component types from OpenShift&amp;#8217;s Image Builder.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog services&lt;/code&gt; – Lists all available services, for example, MySQL.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: New Project&lt;/code&gt; – Creates a new project inside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: About&lt;/code&gt; – Provides information about the OpenShift tools.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: Log out&lt;/code&gt; – Logs out of the current OpenShift cluster.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; New Application&lt;/code&gt; – Creates a new application inside the selected project.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; Delete&lt;/code&gt; – Deletes an existing project.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for an application inside a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Component&lt;/code&gt; – Creates a new component inside the selected application. &lt;ul&gt; &lt;li&gt;git – Use a git repository as the source file for the component.&lt;/li&gt; &lt;li&gt;local – Use a local directory as a source file for the component.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Service&lt;/code&gt; – Performs service catalog operations.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Describe&lt;/code&gt; – Describes the given application in a terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Delete&lt;/code&gt; – Deletes an existing application.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a component in an application&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create URL&lt;/code&gt; – Exposes a component to the outside world. The URLs that are generated using this command can be used to access the deployed components from outside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create Storage&lt;/code&gt; – Creates storage and mounts to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Show Log&lt;/code&gt; – Retrieves the log for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Follow Log&lt;/code&gt; – Follows logs for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Open in Browser&lt;/code&gt; – Opens the exposed URL in a browser.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Push&lt;/code&gt; – Pushes source code to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Watch&lt;/code&gt; – Watches for changes and updates component upon change.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Describe&lt;/code&gt; – Describes the given component in a terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Delete&lt;/code&gt; – Deletes an existing component.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Contributions and Feedback&lt;/h2&gt; &lt;p&gt;This is an open source project and we welcome contributions and suggestions. Follow these &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guidelines for more details.&lt;/p&gt; &lt;p&gt;We are excited for you to give &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; a try! In addition, any feedback to further improve the developer experience using OpenShift on Visual Studio Code is welcome.&lt;/p&gt; &lt;p&gt;Please reach out to us if you have any questions, encounter any issues, or have feature requests.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Have thoughts on how we can make the extension better? Simply &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/issues"&gt;open a new issue&lt;/a&gt;!&lt;/li&gt; &lt;li&gt;For more discussions, chat with us on &lt;a href="https://chat.openshift.io/developers/channels/adapters"&gt;Mattermost&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Happy Collaborating,&lt;br /&gt; Red Hat Developer Tools Team&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#038;title=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" data-a2a-url="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/" data-a2a-title="Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/"&gt;Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-rjfT8pvOUY" height="1" width="1" alt=""/&gt;</content><summary>We are extremely pleased to announce that the preview release of the Red Hat OpenShift extension for Visual Studio Code is now available. You can download the OpenShift Connector extension from the marketplace or install it directly from the extension gallery in Visual Studio Code. This article provides describes the features and benefits of the extension and provides installation details. It also...</summary><dc:creator>Mohit Suman</dc:creator><dc:date>2018-11-28T14:00:02Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/</feedburner:origLink></entry><entry><title>How integration is key to customer experience (Part 1)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BM2EQFXYLLQ/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Customer Experience" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat Customers" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_integration_is_key_to_customer_experience_part_1</id><updated>2018-11-28T12:00:09Z</updated><published>2018-11-28T12:00:09Z</published><content type="html">&lt;p&gt;For the past few months, I&amp;#8217;ve been digging into my new role with a group of Portfolio Architects, looking specifically at integration as the key to omnichannel customer experience.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s an interesting challenge in that we&amp;#8217;ve been given the mission of creating architectural content based on common customer adoption patterns. That&amp;#8217;s very different from most of the traditional marketing activities usually associated with generating content for the sole purpose of positioning products for solutions. When you&amp;#8217;re basing the content on actual execution in solution delivery, you&amp;#8217;re cutting out the &lt;i&gt;chuff. &lt;/i&gt;&lt;/p&gt; &lt;p&gt;What&amp;#8217;s that mean?&lt;/p&gt; &lt;p&gt;It means that it&amp;#8217;s going to provide you with a way to implement a solution using open source technologies by focusing on the integrations, structures, and interactions that actually have been proven to work.&lt;/p&gt; &lt;p&gt;What&amp;#8217;s not included is any vendor promises that you&amp;#8217;ll find in normal marketing content: those promises that, when it gets down to implementation crunch time, might not fully deliver.&lt;/p&gt; &lt;p&gt;Enter the term &lt;i&gt;architectural blueprint. &lt;/i&gt;&lt;/p&gt; &lt;p&gt;In this series of articles, let&amp;#8217;s look at these blueprints, how they are created, and what value they provide for your solution designs.&lt;/p&gt; &lt;p&gt;&lt;span id="more-536947"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;The process&lt;/h3&gt; &lt;p&gt;The first step is to decide the use case to start with, which in my case had to be linked to a higher-level theme that becomes the leading focus. This higher-level theme is not quite boiling the ocean, but it&amp;#8217;s so broad that it&amp;#8217;s going to require some division into smaller parts.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve settled on the higher-level theme being &lt;i&gt;&amp;#8216;migrating applications to &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;,&amp;#8217;&lt;/i&gt; which gives me the latitude to break it down as follows in no particular order:&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-OuoS8hlKSyM/W-AkHk6QCSI/AAAAAAAAtP0/-iGa-x9vfoYxffvXHDmguo3DkBULzFGwACLcBGAs/s1600/coworkers-looking-at-mobile-device_4460x4460.jpg"&gt;&lt;img class="alignright" src="https://1.bp.blogspot.com/-OuoS8hlKSyM/W-AkHk6QCSI/AAAAAAAAtP0/-iGa-x9vfoYxffvXHDmguo3DkBULzFGwACLcBGAs/s320/coworkers-looking-at-mobile-device_4460x4460.jpg" alt="omnichannel customer experience" width="320" height="213" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Omnichannel customer experience&lt;/li&gt; &lt;li&gt;Agile integration for cloud-native applications&lt;/li&gt; &lt;li&gt;APIs for customer and partner ecosystems&lt;/li&gt; &lt;li&gt;Multiple SaaS integration across hybrid environments&lt;/li&gt; &lt;li&gt;Application modernization&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The first case I&amp;#8217;m tackling is &lt;i&gt;omnichannel customer experience&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;The approach taken is to research our existing customers who have implemented solutions in this space, collect their public-facing content, research the internal implementation documentation collections from their successful engagements, and where necessary reach out to the field resources involved.&lt;/p&gt; &lt;h3&gt;What&amp;#8217;s next&lt;/h3&gt; &lt;p&gt;The resulting content targets the following three items:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A slide deck of the architectural blueprint for use that tells the portfolio solution story.&lt;/li&gt; &lt;li&gt;A generic architectural diagram providing the general details for the portfolio solution.&lt;/li&gt; &lt;li&gt;A write-up of the portfolio solution in a &amp;#8220;solution brief&amp;#8221; format.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;An overview of the series on the omnichannel customer experience portfolio architecture blueprint can be found here:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;An introduction (This article)&lt;/li&gt; &lt;li&gt;Common architectural elements for modern integration architectures&lt;/li&gt; &lt;li&gt;Details of specific elements (external apps, API gateways, container platform storage services)&lt;/li&gt; &lt;li&gt;Application integration details&lt;/li&gt; &lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Catch up on any articles you missed by following one of the links above.&lt;/p&gt; &lt;p&gt;Next in this series, I&amp;#8217;ll be taking a look at the generic common architecture for omnichannel customer experience.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#38;linkname=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fintegration-is-key-to-customer-experience%2F&amp;#038;title=How%20integration%20is%20key%20to%20customer%20experience%20%28Part%201%29" data-a2a-url="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/" data-a2a-title="How integration is key to customer experience (Part 1)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;How integration is key to customer experience (Part 1)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BM2EQFXYLLQ" height="1" width="1" alt=""/&gt;</content><summary>For the past few months, I’ve been digging into my new role with a group of Portfolio Architects, looking specifically at integration as the key to omnichannel customer experience. It’s an interesting challenge in that we’ve been given the mission of creating architectural content based on common customer adoption patterns. That’s very different from most of the traditional marketing activities us...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-28T12:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/</feedburner:origLink></entry><entry><title>Hibernate ORM 5.1.17.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gitvMDB5V7o/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Gail Badner</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_1_17_final_released</id><updated>2018-11-29T11:01:02Z</updated><published>2018-11-28T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM 5.1.17.Final:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is the final release of the 5.1 series. For future bugfixes, please migrate to 5.3 or later.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release does not support Java 6 or 7; Java 8 is required. For details, see the &lt;a href="https://hibernate.atlassian.net/browse/HHH-13126"&gt;HHH-13126&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;tag is &lt;a href="http://github.com/hibernate/hibernate-orm/releases/tag/5.1.17"&gt;here&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;changes are listed &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31707"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10031&amp;amp;version=31707"&gt;here&lt;/a&gt;);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;release bundles are at &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-orm/5.1.17.Final/"&gt;SourceForge&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For information on consuming the release via your favorite dependency-management-capable build tool, see &lt;a href="http://hibernate.org/orm/releases/5.1" class="bare"&gt;http://hibernate.org/orm/releases/5.1&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gitvMDB5V7o" height="1" width="1" alt=""/&gt;</content><summary>Hibernate ORM 5.1.17.Final: This is the final release of the 5.1 series. For future bugfixes, please migrate to 5.3 or later. This release does not support Java 6 or 7; Java 8 is required. For details, see the HHH-13126. tag is here; changes are listed here (or, for people without a Hibernate Jira account, here); release bundles are at SourceForge. For information on consuming the release via your...</summary><dc:creator>Gail Badner</dc:creator><dc:date>2018-11-28T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/28/hibernate-orm-5117-final-release/</feedburner:origLink></entry><entry><title>What, No Python in RHEL 8 Beta?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-aFPcivt8q8/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-what_no_python_in_rhel_8_beta</id><updated>2018-11-27T15:00:04Z</updated><published>2018-11-27T15:00:04Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;TL;DR Of course we have Python! You just need to specify if you want Python 3 or 2 as we didn’t want to set a default. Give &lt;code&gt;yum install python3&lt;/code&gt; or &lt;code&gt;yum install python2&lt;/code&gt; a try. Or, if you want to see what we recommend you install &lt;code&gt;yum install @python36&lt;/code&gt; or &lt;code&gt;yum install @python27&lt;/code&gt;. Read on for why.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;For prior versions of &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt;, and most &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; Distributions, users have been locked to the system version of Python unless they got away from the system package manager. While this can be true for a lot of tools (ruby: rvm; node: nvm) the Python use case is worse because so many Linux tools (like yum) rely on Python.&lt;/span&gt;&lt;span id="more-535767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In order to improve this experience for RHEL8 users, we have moved the Python &lt;a href="https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/"&gt;used by the system “off to the side&amp;#8221;&lt;/a&gt;. In RHEL 8 we also introduced Modularity. As a result, in combination with Python’s ability to be parallel installed, we can now make multiple versions of Python available and installable, from the standard repositories, installing to the standard locations. Now, users can choose what version of Python they want to run in any given userspace and it simply works. For more info, see my article, &lt;a href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;&lt;em&gt;Introducing Application Streams in RHEL 8&lt;/em&gt;&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To be honest, the system maintainers also get some advantages of not being locked to an aging version of Python for our system tools. With users not relying on a particular version of Python coming with the system installation, we have the freedom to take advantage of new language features, performance improvements, and all the other goodness a developer gets when tracking near the upstream version.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;However, this has resulted in a dilemma. When a user sits down at a fresh installation of RHEL8 they will naturally expect that &lt;code&gt;/usr/bin/python&lt;/code&gt; will run some version of Python. If you follow the recommendation in &lt;a href="https://www.python.org/dev/peps/pep-0394/"&gt;Python Enhancement Proposal (PEP) 394&lt;/a&gt;, that will be Python 2. However, at some point, a new PEP will likely want to change that recommendation to Python 3, &lt;em&gt;probably during, the typically *10* year, life of RHEL 8!&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;So, what do we do? Well, if we follow the current recommendation, we make some present day users happy. However, when the Python Community shifts to recommending Python 3 as the default, we will make new users unhappy.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;As a result, we came to the tough conclusion, don’t provide bare Python at all. Instead, ask our users from the beginning to choose which version of Python they actually want. So, &lt;code&gt;yum install python&lt;/code&gt; results in a 404.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;However, we do try to make it as easy as possible to get Python 2 or 3 (or both) on to your system. We recommend using &lt;code&gt;yum install @python36&lt;/code&gt; or &lt;code&gt;yum install @python27&lt;/code&gt; to take advantage of the recommended set of packages to install. If you really want *just* the Python binary, you can use &lt;code&gt;yum install python3&lt;/code&gt; or &lt;code&gt;yum install python2&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We have also setup the alternatives infrastructure so that when you install either (or both) you can easily make /usr/bin/python point to the right place using &lt;code&gt;alternatives --config python&lt;/code&gt;. However, as we explained above, and aligned with the Python PEP, we don’t recommend relying on /usr/bin/python being the correct python for your application.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To conclude, yes, Python is included in RHEL 8! And, it will be even better than in the past! If you want more details on anything in this post, please see the &lt;a href="https://wp.me/p8e0as-2fn5"&gt;How To Guide&lt;/a&gt; on Red Hat Developers.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Oh and if you haven&amp;#8217;t downloaded RHEL 8 yet—go to &lt;a href="https://developers.redhat.com/rhel8/"&gt;developers.redhat.com/rhel8&lt;/a&gt; now.&lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;Additional Information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8 Beta for developers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;Introducing Application Streams in RHEL 8&lt;/a&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wp.me/p8e0as-2fsJ"&gt;Petr Viktorin&amp;#8217;s Python on RHEL 8 article&lt;/a&gt; (see the discussion of Platform Python)&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/" rel="bookmark"&gt;Introducing CodeReady Linux Builder&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#38;linkname=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fwhat-no-python-in-rhel-8-beta%2F&amp;#038;title=What%2C%20No%20Python%20in%20RHEL%208%20Beta%3F" data-a2a-url="https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/" data-a2a-title="What, No Python in RHEL 8 Beta?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/"&gt;What, No Python in RHEL 8 Beta?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-aFPcivt8q8" height="1" width="1" alt=""/&gt;</content><summary>TL;DR Of course we have Python! You just need to specify if you want Python 3 or 2 as we didn’t want to set a default. Give yum install python3 or yum install python2 a try. Or, if you want to see what we recommend you install yum install @python36 or yum install @python27. Read on for why. For prior versions of Red Hat Enterprise Linux, and most Linux Distributions, users have been locked to the ...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-27T15:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/27/what-no-python-in-rhel-8-beta/</feedburner:origLink></entry><entry><title>Audit log mode applied to all audit data</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eHUFLliYVzQ/audit-log-mode-applied-to-all-audit-data.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-audit_log_mode_applied_to_all_audit_data</id><updated>2018-11-27T13:06:14Z</updated><published>2018-11-27T13:06:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;jBPM allows to store so called audit logs in various modes&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;JPA (default)&lt;/li&gt;&lt;li&gt;JMS&lt;/li&gt;&lt;li&gt;None&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;JPA&lt;/b&gt; mode means that data will be stored directly and within the same transaction as process execution. That usually have some additional performance overhead although it's certainly not significant and unless huge volume is expected is a sound default setting.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;JMS&lt;/b&gt; mode means that all audit data will be stored in background and the engine will push all required data via JMS layer. That allows to offload main thread from being responsible for storing audit logs and then allow to process more process instances while JMS listener will deal with storing audit logs in background.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;None&lt;/b&gt; mode means that audit logs won't be stored at all, which might make sense in some cases (usually straight through processes) so the audit data is not required. Keep in mind that with disabled audit logs (set to None mode) both jBPM console and Kie Server features are limited as they do rely on audit data.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Until 7.15 audit mode applied only to process related audit data and that consists of&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;ProcessInstanceLog&lt;/li&gt;&lt;li&gt;NodeInstanceLog&lt;/li&gt;&lt;li&gt;VariableInstanceLog&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;it has been improved to cover all audit logs that span across processes, user tasks and cases. With that said it covers (in addition to listed above) following&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;AuditTaskImpl&lt;/li&gt;&lt;li&gt;TaskEvent&lt;/li&gt;&lt;li&gt;TaskVariableImpl&lt;/li&gt;&lt;li&gt;CaseFileDataLog&lt;/li&gt;&lt;li&gt;CaseRoleAssignmentLog&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;BAMTaskSummary is not covered with audit mode except for NONE mode which also disables BAM logging.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Configuration&lt;/h3&gt;&lt;div&gt;JPA and NONE mode do not require additional configuration and can be used directly after installation. JMS does need a bit of configuration to allow to take advantage of JMS layer.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This sample configuration assumes the runtime environment is based on WildFly (or EAP) as application server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Enable JMS queue creation in kie-server-jms.xml&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;/ul&gt;&lt;div&gt;First you need to enable dedicated JMS queue for sending audit data through. To do so, go to &amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/META-INF&lt;/span&gt; and edit &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server-jms.xml&lt;/span&gt; file. Locate the commended queue named&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;KIE.SERVER.AUDIT&lt;/span&gt; and uncomment the entire queue configuration, it should look like&lt;br /&gt;&lt;br /&gt;&lt;pre class="brush:xml"&gt;&amp;lt;messaging-deployment xmlns="urn:jboss:messaging-activemq-deployment:1.0"&amp;gt;&lt;br /&gt; &amp;lt;server name="default"&amp;gt;&lt;br /&gt; &amp;lt;jms-destinations&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server REQUEST queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.REQUEST"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.REQUEST" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.REQUEST" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server RESPONSE queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.RESPONSE"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.RESPONSE" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.RESPONSE" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- Kie Server EXECUTOR queue --&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.EXECUTOR"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.EXECUTOR" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- JMS queue for signals --&amp;gt;&lt;br /&gt; &amp;lt;!-- enable when external signals are required --&amp;gt;&lt;br /&gt; &amp;lt;!--&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.SIGNAL.QUEUE"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.SIGNAL" /&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.SIGNAL" /&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt; --&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- JMS queue for audit --&amp;gt;&lt;br /&gt; &amp;lt;!-- enable when jms mode for audit is required --&amp;gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;jms-queue name="KIE.SERVER.AUDIT"&amp;gt;&lt;br /&gt; &amp;lt;entry name="queue/KIE.SERVER.AUDIT"/&amp;gt;&lt;br /&gt; &amp;lt;entry name="java:jboss/exported/jms/queue/KIE.SERVER.AUDIT"/&amp;gt;&lt;br /&gt; &amp;lt;/jms-queue&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;/jms-destinations&amp;gt;&lt;br /&gt; &amp;lt;/server&amp;gt;&lt;br /&gt;&amp;lt;/messaging-deployment&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;h4 style="text-align: left;"&gt;Enable message listener in ejb-jar.xml&lt;/h4&gt;Next, go to &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/WEB-INF&lt;/span&gt; and edit &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;ejb-jar.xml&lt;/span&gt; file. Locate &amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;CompositeAsyncAuditLogReceiver&lt;/span&gt; and uncomment entire section for that message driven bean. Also uncomment the &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;enterprise-beans&lt;/span&gt; tags for the document.&lt;br /&gt;It should look like below&lt;br /&gt;&lt;pre class="brush:xml"&gt;&lt;br /&gt;&amp;lt;ejb-jar id="ejb-jar_ID" version="3.1"&lt;br /&gt; xmlns="http://java.sun.com/xml/ns/javaee"&lt;br /&gt; xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&lt;br /&gt; xsi:schemaLocation="http://java.sun.com/xml/ns/javaee&lt;br /&gt; http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd"&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;enterprise-beans&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- enable when external signals are required and queue and connection factory is defined&lt;br /&gt; &amp;lt;message-driven&amp;gt;&lt;br /&gt; &amp;lt;ejb-name&amp;gt;JMSSignalReceiver&amp;lt;/ejb-name&amp;gt;&lt;br /&gt; &amp;lt;ejb-class&amp;gt;org.jbpm.process.workitem.jms.JMSSignalReceiver&amp;lt;/ejb-class&amp;gt;&lt;br /&gt; &amp;lt;transaction-type&amp;gt;Bean&amp;lt;/transaction-type&amp;gt;&lt;br /&gt; &amp;lt;activation-config&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destinationType&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;javax.jms.Queue&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destination&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;java:/queue/KIE.SERVER.SIGNAL&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;/activation-config&amp;gt;&lt;br /&gt; &amp;lt;/message-driven&amp;gt;&lt;br /&gt; --&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!-- enable when jms mode for audit is required and queue and connection factory is defined--&amp;gt;&lt;br /&gt; &amp;lt;message-driven&amp;gt;&lt;br /&gt; &amp;lt;ejb-name&amp;gt;CompositeAsyncAuditLogReceiver&amp;lt;/ejb-name&amp;gt;&lt;br /&gt; &amp;lt;ejb-class&amp;gt;org.jbpm.kie.services.impl.CompositeAsyncAuditLogReceiver&amp;lt;/ejb-class&amp;gt;&lt;br /&gt; &amp;lt;transaction-type&amp;gt;Container&amp;lt;/transaction-type&amp;gt;&lt;br /&gt; &amp;lt;activation-config&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destinationType&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;javax.jms.Queue&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;destination&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;java:/queue/KIE.SERVER.AUDIT&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-name&amp;gt;maxSession&amp;lt;/activation-config-property-name&amp;gt;&lt;br /&gt; &amp;lt;activation-config-property-value&amp;gt;1&amp;lt;/activation-config-property-value&amp;gt;&lt;br /&gt; &amp;lt;/activation-config-property&amp;gt;&lt;br /&gt; &amp;lt;/activation-config&amp;gt;&lt;br /&gt; &amp;lt;/message-driven&amp;gt;&lt;br /&gt;&lt;br /&gt; &amp;lt;!----&amp;gt;&lt;br /&gt; &amp;lt;/enterprise-beans&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;/ejb-jar&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Configure JMS related config for audit logs&lt;/h4&gt;&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;/ul&gt;Lastly, go to &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kie-server.war/WEB-INF/classes&lt;/span&gt; and rename the &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;wildfly-&lt;/span&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;jbpm.audit.jms.properties&lt;/span&gt; to&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;jbpm.audit.jms.properties&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;And that's all that is required to make use of JMS audit logging in jBPM. For other applications servers, make sure to create JMS queue (and then refer to it in ejb-jar.xml file) according to application server guides for JMS.&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eHUFLliYVzQ" height="1" width="1" alt=""/&gt;</content><summary>jBPM allows to store so called audit logs in various modes JPA (default) JMS None JPA mode means that data will be stored directly and within the same transaction as process execution. That usually have some additional performance overhead although it's certainly not significant and unless huge volume is expected is a sound default setting. JMS mode means that all audit data will be stored in back...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-27T13:06:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/audit-log-mode-applied-to-all-audit-data.html</feedburner:origLink></entry><entry><title>Solving the challenges of debugging microservices on a container platform</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WN2mw_EF06Q/" /><category term="ansible" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="debugging" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="opentracing" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="service mesh" scheme="searchisko:content:tags" /><category term="Squash" scheme="searchisko:content:tags" /><category term="Telepresence" scheme="searchisko:content:tags" /><author><name>Didier Wojciechowski</name></author><id>searchisko:content:id:jbossorg_blog-solving_the_challenges_of_debugging_microservices_on_a_container_platform</id><updated>2018-11-27T13:00:13Z</updated><published>2018-11-27T13:00:13Z</published><content type="html">&lt;p&gt;Microservices have become mainstream in the enterprise. This proliferation of &lt;a href="http://rhdp-drupal.redhat.com/topics/microservices"&gt;microservices&lt;/a&gt; applications generates new problems, which requires a new approach to managing problems. A microservice is a small, independently deployable, and independently scalable software service that is designed to encapsulate a specific semantic function in the larger application&lt;a href="#references"&gt;&lt;sup&gt;l&lt;/sup&gt;&lt;/a&gt;. This article explores several approaches to deploying tools to debug microservices applications on a &lt;a href="http://rhdp-drupal.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; platform like &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt;, including &lt;a href="https://developers.redhat.com/blog/2017/07/10/using-opentracing-with-jaeger-to-collect-application-metrics-in-kubernetes/"&gt;OpenTracing&lt;/a&gt;,  Squash, Telepresence, and creating a Squash Operator in &lt;a href="https://www.redhat.com/en/technologies/management/ansible"&gt;Red Hat Ansible Automation&lt;/a&gt;.&lt;span id="more-533687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Expect challenges and changes on the microservices journey&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;A typical traditional monolithic application consists of a single process. It is easy to attach a debugger to this process to have a complete view of the runtime state of the application. In contrast, a microservices application can be composed of hundreds of processes. The main problem with debugging and finding the root cause in a distributed system is being able to recreate the state of the system when the error occurred so that you can obtain a holistic view. For this reason, troubleshooting is more difficult in a microservices environment, &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Importantly, identifying the root cause of issues in microservices application can have a direct business impact. &lt;/span&gt;In fact, &lt;strong&gt;40%&lt;/strong&gt;&lt;a href="#references"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; to &lt;strong&gt;90%&lt;/strong&gt;&lt;a href="#references"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; of total software costs of are typically incurred after launch. It is important to knowing the right techniques and to deploying the right debugging tools in order to reduce time and money spent to correct software code.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Technical challenges with microservices applications&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Microservices applications present unique challenges. Communication between services is asynchronous and not reliable, making errors difficult to reproduce. Moreover, s&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;ervices often interact with one another intermittently. The fine-grained approach to developing microservices lets developers choose the best language and framework for a specific job. As such, microservices can be written in different languages, and may be running across several different nodes. Together, these properties can make transactions difficult to step through.&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;&lt;em&gt;&lt;span style="font-weight: 400;"&gt;“&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Debugging microservices applications is a difficult task. The state of the application is spread across multiple microservices, and it’s hard to get a holistic view of the state of the application.  &lt;/span&gt;&lt;/em&gt;&lt;span style="font-weight: 400;"&gt;&lt;em&gt;Currently, debugging of microservices is often assisted by &lt;a href="http://opentracing.io/"&gt;OpenTracing&lt;/a&gt;, which helps in tracing of a transaction or workflow for postmortem analysis and more recently by &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;service meshes&lt;/a&gt; like &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt;, which monitor the network to identify latency problems in real-time. However, these tools do not allow you to monitor and interfere with the application during runtime&amp;#8221;&lt;/em&gt; (&lt;a href="https://github.com/solo-io/squash"&gt;solo.io&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing&lt;/span&gt;&lt;/h2&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://opentracing.io"&gt;OpenTracing&lt;/a&gt; is an API specification for distributed tracing, and is the third hosted Cloud Native Computing Foundation (CNCF) project after Kubernetes and Prometheus. Jaeger is one of the most well-known OpenTracing implementations, and it is the distributed tracing solution used by &lt;a href="https://istio.io/docs/tasks/telemetry/distributed-tracing/"&gt;Istio for Telemetry&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing is often considered to be resource intensive, and logging the state of an application during runtime can result in a performance overhead. The BLOG &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941"&gt;Take OpenTracing for a HotROD Ride&lt;/a&gt; details the optimization of a HotRod ride app developed by Uber (see screenshot below). The article involves successive optimizations of a Go-based Ride-on-Demand demonstration service, all informed by tracing data.&lt;/span&gt;&lt;/p&gt; &lt;h6 style="text-align: center;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533717 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-1024x336.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46.png" alt="" width="1466" height="481" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46.png 1466w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-300x98.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-768x252.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.42.46-1024x336.png 1024w" sizes="(max-width: 1466px) 100vw, 1466px" /&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Picture 1 : HotRod Ride apps developed by Uber&lt;br /&gt; &lt;/span&gt;&lt;/h6&gt; &lt;h3 style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;Running OpenTracing in OpenShift&lt;/span&gt;&lt;/h3&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;To run the HotRod example in OpenShift, execute the steps below:&lt;/span&gt;&lt;/p&gt; &lt;p class="selectionShareable" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;&lt;code class="notranslate"&gt;$ oc new-project jaeger-demo&lt;/code&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;code class="notranslate"&gt;$ oc process -f https://raw.githubusercontent.com/jaegertracing/jaeger-openshift/master/all-in-one/jaeger-all-in-one-template.yml | oc create -f -&lt;/code&gt;&lt;br /&gt; &lt;code class="notranslate"&gt;$ oc import-image jaegertracing/example-hotrod:1.6 --confirm&lt;/code&gt;&lt;br /&gt; &lt;code class="notranslate"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/jaeger/hotrod-app.yml | oc create -f -&lt;/code&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-1024x480.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26.png" alt="" width="1467" height="688" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26.png 1467w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-768x360.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-17.55.26-1024x480.png 1024w" sizes="(max-width: 1467px) 100vw, 1467px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://github.com/jaegertracing/jaeger/tree/master/examples/hotrod/cmd"&gt;Source code for HotROD apps&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Pros of this approach include:&lt;/span&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Logging &amp;#8211; easy to output to any logging tool&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Context propagation &amp;#8211; use baggage to carry request and user ID’s, etc.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Critical path analysis &amp;#8211; drill down into request latency&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;System topology analysis &amp;#8211; identify bottlenecks due to shared resource&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Metrics/alerting &amp;#8211; measure based on tags, span time, log data&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Cons of this approach include:&lt;/span&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing does not provide run-time debugging&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;OpenTracing requires wrapping and changing the code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;It is impossible to change variable values in runtime&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;The process is expansive, requiring repeatedly modifying and testing the application&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Squash&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Squash allows runtime debugging on distributed applications and is integrated with integrated development environments (IDEs) such as Visual Studio code and IntelliJ. Squash is deployed to the cluster as a server and a DaemonSet, with your IDE acting as the Squash UI. Once the applications’ pods have been retrieved, use your IDE to attach to one of the running pods where you can select the service on which to start your debug session.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-1024x616.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30.png" alt="" width="1632" height="981" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30.png 1632w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-768x462.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.06.30-1024x616.png 1024w" sizes="(max-width: 1632px) 100vw, 1632px" /&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;More information regarding &lt;/span&gt;&lt;a href="https://github.com/solo-io/squash/blob/master/docs/techincal-overview.md"&gt;&lt;span style="font-weight: 400;"&gt;Squash solution architecture&lt;/span&gt;&lt;/a&gt; is available.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;With Squash, you can:&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• Perform live debugging across multiple microservices&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• Debug a container in a pod&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• Debug a service&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• Set breakpoints&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• Step through the code&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;• View and modify values of variables&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;h3 style="text-align: left;"&gt;&lt;span style="font-weight: 400;"&gt;Running Squash in Openshift&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400; color: #333333;"&gt;Prerequisites :&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; Use Openshift version 3.9 as higher versions are not yet tested. For versions higher than 3.9 you have to change the version of the squash image (from v0.2.1 to v0.3.1).&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://hub.docker.com/r/soloio/squash-server/tags/"&gt;Squash-server&lt;/a&gt; and &lt;a href="https://hub.docker.com/r/soloio/squash-client/tags/"&gt;squash-client&lt;/a&gt; images are available.&lt;/span&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;To deploy a Squash application in OpenShift, follow the steps below:&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ oc new-project squash&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/squash/squash-template.yaml -l name=squash | oc create -f -&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc adm policy add-scc-to-user privileged -z squash-client&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc get route&lt;/span&gt; &lt;/pre&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;The Squash command-line interface (CLI) can be &lt;a href="https://github.com/solo-io/squash/tree/master/docs/install#command-line-interface-cli"&gt;installed locally&lt;/a&gt;. Additional information on the &lt;a href="https://github.com/solo-io/squash/blob/master/docs/cli.md"&gt;Squash CLI&lt;/a&gt; is available&lt;br /&gt; &lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ export SQUASH_SERVER_URL=&amp;#60;route exposed&amp;#62;/api/v2 $ squash list a State |ID |Debugger |Image |Debugger Address&lt;/span&gt; &lt;/pre&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Install a Squash plugin for the appropriate IDE (&lt;a href="https://github.com/solo-io/squash/blob/master/docs/IDEs.md#ides"&gt;Visual Studio code and Intellij&lt;/a&gt;) and &lt;a href="https://github.com/solo-io/squash-vscode/blob/master/docs/example-app-kubernetes.md"&gt;setup the IDE&lt;/a&gt;.&lt;/span&gt;&lt;/h4&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-1024x733.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05.png" alt="" width="1055" height="755" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05.png 1055w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-300x215.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-768x550.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.20.05-1024x733.png 1024w" sizes="(max-width: 1055px) 100vw, 1055px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-1024x632.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32.png" alt="" width="1174" height="725" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32.png 1174w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-300x185.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-768x474.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.21.32-1024x632.png 1024w" sizes="(max-width: 1174px) 100vw, 1174px" /&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Deploy a sample application to use Squash.&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ oc new-project demo-squash&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc process -f https://raw.githubusercontent.com/dwojciec/debugging-microservices/master/squash/demo-squash.yaml | oc create -f -&lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Note:&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; I added an &lt;/span&gt;&lt;a href="https://docs.openshift.com/container-platform/3.10/install_config/configuring_routing.html"&gt;&lt;span style="font-weight: 400;"&gt;annotation&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; on the route definition &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;haproxy.router.openshift.io/timeout: 5m to debug the application.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt; &lt;h4&gt;&lt;span style="font-weight: 400;"&gt;Clone the application locally on your system.&lt;/span&gt;&lt;/h4&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ git clone https://github.com/solo-io/squash.git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ cd squash/contrib/example&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ code ~/squash/contrib/example/service1/&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ idea ~/squash/contrib/example/service2-java&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Restart pod of the demo application to release any debug attachment&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ oc delete pod --all --grace-period=0 -n demo-squash &lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Telepresence&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Telepresence offers another alternative to debuging code deployed on a Kubernetes cluster. &lt;/span&gt;&lt;a href="https://www.telepresence.io/"&gt;&lt;span style="font-weight: 400;"&gt;Telepresence&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; is currently a &lt;/span&gt;&lt;a href="https://landscape.cncf.io/cncf=sandbox"&gt;&lt;span style="font-weight: 400;"&gt;sandbox project at the CNCF&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Using Telepresence on Openshift is presented &lt;/span&gt;&lt;a href="https://www.telepresence.io/tutorials/openshift"&gt;&lt;span style="font-weight: 400;"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and in a blog post titled “&lt;/span&gt;&lt;a href="https://blog.openshift.com/telepresence-local-development/"&gt;&lt;span style="font-weight: 400;"&gt;Telepresence for local developement&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;”.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;References to go further: &lt;/span&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.weave.works/blog/debugging-and-troubleshooting-microservices-in-kubernetes"&gt;&lt;span style="font-weight: 400;"&gt;Debugging and Troubleshooting Microservices in Kubernetes with Ray Tsang (Google)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.weave.works/blog/debugging-microservices-squash-vs-telepresence"&gt;&lt;span style="font-weight: 400;"&gt;Debugging microservices &amp;#8211; Squash vs. Telepresence&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2018/05/01/developing-on-kubernetes/"&gt;&lt;span style="font-weight: 400;"&gt;Developing on Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://itnext.io/development-and-debugging-with-kubernetes-296bb60d9549"&gt;&lt;span style="font-weight: 400;"&gt;Development and Debugging with Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://jaxenter.com/rookout-debug-kubernetes-151062.html"&gt;Rookout: breakpoints for Kubernetes ?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Debugging techniques:&lt;/span&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/google-debug-microservices"&gt;&lt;span style="font-weight: 400;"&gt;Debugging Microservices: How Google SREs Resolve Outages&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://thenewstack.io/debugging-microservices-lessons-from-google-facebook-lyft/"&gt;&lt;span style="font-weight: 400;"&gt;Debugging Microservices: Lessons from Google, Facebook, Lyft&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/08/16/troubleshooting-java-applications-on-openshift/"&gt;&lt;span style="font-weight: 400;"&gt;Troubleshooting Java applications on OpenShift&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://itnext.io/debug-a-go-application-in-kubernetes-from-ide-c45ad26d8785"&gt;&lt;span style="font-weight: 400;"&gt;Debug a Go Application in Kubernetes from IDE&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (The Hard Way).&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Creating a Squash Ansible Operator&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Based on the&lt;/span&gt;&lt;a href="https://github.com/operator-framework/operator-sdk/blob/master/doc/ansible/user-guide.md"&gt;&lt;span style="font-weight: 400;"&gt; User Guide&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; which walks through an example of building a simple memcached-Operator powered by Ansible tools and librairies provided by the Operator SDK, I decided to build my Squash Operator. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://github.com/dwojciec/squash-operator"&gt;Source code&lt;/a&gt; is available.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;An Operator is a Kubernetes controller that deploys and manages an application’s resources and services in Kubernetes. In Kubernetes each of your application’s resources can be defined by a custom resource definition (CRD). CRDs uniquely identify your applications custom resources by its Group, Version, and Kind in a Kubernetes cluster. Once the CRDs have been created, you would then create an instance of the custom resource, or CR, with a unique name.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-1024x543.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14.png" alt="" width="1260" height="668" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14.png 1260w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-768x407.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.42.14-1024x543.png 1024w" sizes="(max-width: 1260px) 100vw, 1260px" /&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Create a new operator&lt;/span&gt;&lt;/h3&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ $GOPATH/bin/operator-sdk --version&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;operator-sdk version 0.0.6+git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ mkdir -p -p $GOPATH/src/github.com/squash-operator/&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ cd $GOPATH/src/github.com/squash-operator/&lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The Operator SDK provides an option to create an Ansible Operator. An Ansible Operator leverages the full power of Ansible and it does not require the knowledge or the experience of any other programming language like GO or Java. You simply write some Ansible code and edit a few YAML files to get your Operator up and running.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ $GOPATH/bin/operator-sdk new squash-operator --api-version=app.example.com/v1alpha1 --kind=Squash --type=ansible&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;operator-sdk version 0.0.6+git&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/init/galaxy-init.sh&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/Dockerfile&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/test-framework/Dockerfile&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/tmp/build/go-test.sh&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Rendering Ansible Galaxy role [squash-operator/roles/Squash]...&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Cleaning up squash-operator/tmp/init&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/watches.yaml&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/rbac.yaml Create squash-operator/deploy/crd.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/cr.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Create squash-operator/deploy/operator.yaml &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Run git init ... &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Initialized empty Git repository in /Users/dwojciec/go/src/github.com/squash-operator/squash-operator/.git &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Run git init done &lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;cd&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; squash-operator&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ tree . ├── deploy │   ├── cr.yaml │   ├── crd.yaml │   ├── operator.yaml │   └── rbac.yaml ├── roles │   └── Squash │       ├── README.md │       ├── defaults │       │ └── main.yml │       ├── files │       ├── handlers │       │ └── main.yml │       ├── meta │       │ └── main.yml │       ├── tasks │       │ └── main.yml │       ├── templates │       ├── tests │       │ ├── inventory │       │ └── test.yml │       └── vars │           └── main.yml ├── tmp │   └── build │       ├── Dockerfile │       ├── go-test.sh │       └── test-framework │           └── Dockerfile └── watches.yaml 14 directories, 16 files &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-533897 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-1024x523.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43.png" alt="" width="1252" height="640" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43.png 1252w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-300x153.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-768x393.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.43-1024x523.png 1024w" sizes="(max-width: 1252px) 100vw, 1252px" /&gt;&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-533887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-1024x435.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51.png" alt="" width="1273" height="541" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51.png 1273w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-768x326.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-05-at-18.52.51-1024x435.png 1024w" sizes="(max-width: 1273px) 100vw, 1273px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Once all the code is generated by the Operator SDK. Go to the deploy directory to check the content of all files.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ pwd &lt;/span&gt; &lt;span style="font-weight: 400;"&gt;/Users/dwojciec/go/src/github.com/squash-operator/squash-operator/deploy&lt;/span&gt; &lt;span style="font-weight: 400;"&gt;$ tree . ├── cr.yaml ├── crd.yaml ├── operator.yaml └── rbac.yaml 0 directories, 4 files &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated rbac.yaml with &lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/deploy/rbac.yaml"&gt;this code&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. Check the content of the rbac.yaml file because by default the namespace used is the &lt;/span&gt;&lt;b&gt;default&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; one for &lt;/span&gt;&lt;b&gt;ClusterRoleBinding&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; and you may want to use a different project to deploy your application. In my case I deployed my Operator in a project I created named &lt;/span&gt;&lt;b&gt;operator-squash&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; . I added and created a &lt;/span&gt;&lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/deploy/sa.yaml"&gt;&lt;span style="font-weight: 400;"&gt;sa.yaml&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; file to define &lt;/span&gt;&lt;b&gt;ServiceAccount&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; for my application &lt;/span&gt;&lt;b&gt;squash-operator&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Building the Squash Ansible Role&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The first thing to do is to modify the generated Ansible role under &lt;/span&gt;&lt;b&gt;&lt;i&gt;roles/Squash&lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;. This Ansible Role controls the logic that is executed when a resource is modified.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated the empty file&lt;/span&gt; &lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/roles/Squash/tasks/main.yml"&gt;&lt;b&gt;roles/Squash/tasks/main.yaml&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; with the following:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; --- # tasks file for squash-server - name: start squash-server k8s: definition: kind: Deployment apiVersion: apps/v1 metadata: name: squash-server namespace: '{{ meta.namespace }}' spec: selector: matchLabels: app: squash-server template: metadata: labels: app: squash-server spec: containers: - name: squash-server image: soloio/squash-server:v0.2.1 - name: start squash-client k8s: state: present definition: "{{ lookup('template', '/opt/ansible/k8s/squash-client.yml') | from_yaml }}" - name: create squash-server service k8s: state: present definition: "{{ lookup('template', '/opt/ansible/k8s/squash-server-svc.yml') | from_yaml }}" &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This Ansible task is creating a Kubernetes deployment using the &lt;a href="https://docs.ansible.com/ansible/2.6/modules/k8s_module.html"&gt;k8s Ansible module&lt;/a&gt; which &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;allows you to easily interact with the kubernetes resources idempotently. &lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Update of the Dockerfile (tmp/build/Dockerfile)&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Inside the &lt;/span&gt;&lt;b&gt; &lt;/b&gt;&lt;a href="https://raw.githubusercontent.com/dwojciec/squash-operator/master/roles/Squash/tasks/main.yml"&gt;&lt;b&gt;roles/Squash/tasks/main.yaml&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;  file I’m using multiples external files such as &amp;#8216;/opt/ansible/k8s/squash-server-svc.yml&amp;#8217;. To consume these files I updated the Dockerfile to add them.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I updated squash-operator/tmp/build/Dockerfile from:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;FROM quay.io/water-hole/ansible-operator COPY roles/ ${HOME}/roles/ COPY watches.yaml ${HOME}/watches.yaml&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;FROM quay.io/water-hole/ansible-operator COPY k8s/ ${HOME}/k8s/ COPY roles/ ${HOME}/roles/ COPY playbook.yaml ${HOME}/playbook.yaml COPY watches.yaml ${HOME}/watches.yaml&lt;/span&gt; &lt;/pre&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Update the the watches.yaml file&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;By default the Operator SDK generated &lt;/span&gt;&lt;b&gt;watches.yaml&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; file watches Squash resource events and executes Ansible &lt;/span&gt;&lt;b&gt;Role&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Squash.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ cat watches.yaml --- - version: v1alpha1 group: app.example.com kind: Squash role: /opt/ansible/roles/Squash&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;I decided to use the &lt;/span&gt;&lt;b&gt;Playbook&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; option by specifying a&lt;/span&gt;&lt;b&gt;&lt;i&gt; playbook.yaml&lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; file inside &lt;/span&gt;&lt;b&gt;&lt;i&gt;watch.yaml &lt;/i&gt;&lt;/b&gt;&lt;span style="font-weight: 400;"&gt;which will configure the operator to use this specified path when launching ansible-runner with the Ansible Playbook.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; --- - version: v1alpha1 group: app.example.com kind: Squash playbook: /opt/ansible/playbook.yaml finalizer: name: finalizer.app.example.com vars: sentinel: finalizer_running&lt;/span&gt; &lt;/pre&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;Build and run the Operator&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Before running the Squash Operator, Kubernetes needs to know about the new CRD the Operator will be watching.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Deploy the CRD as follows:&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ oc new-project operator-squash $ kubectl create -f deploy/crd.yaml&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Then build the squash-operator image and push it to a registry.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt; $ $GOPATH/bin/operator-sdk build quay.io/dwojciec/squash-operator:v0.0.1 $ docker push quay.io/dwojciec/squash-operator:v0.0.1&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes deployment manifests are generated in &lt;b&gt;deploy/operator.yaml&lt;/b&gt;. The deployment image in this file needs to be modified from the placeholder REPLACE_IMAGE to the previous built image. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Edit &lt;b&gt;deploy/operator.yaml&lt;/b&gt; file and change :&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt; spec: containers: - name: squash-operator image: REPLACE_IMAGE ports: To&lt;/span&gt;&lt;/pre&gt; &lt;pre&gt;&lt;span style="font-weight: 400;"&gt;spec: containers: - name: squash-operator image: quay.io/dwojciec/squash-operator:v0.0.1 ports: &lt;/span&gt;&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Finally, deploy the squash-operator.&lt;/span&gt;&lt;/p&gt; &lt;pre class="notranslate" style="padding-left: 30px;"&gt;&lt;span style="font-weight: 400;"&gt;$ kubectl create -f deploy/rbac.yaml $ kubectl create -f deploy/operator.yaml $ kubectl create -f deploy/sa.yaml&lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Thanks for reading this article. I hope you found interesting information. And if you want to deep dive I encourage you to go further and I&amp;#8217;m sharing some links below.&lt;/p&gt; &lt;p&gt;&lt;span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;"&gt;Consult these references to go further:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://opensource.com/article/18/10/ansible-operators-kubernetes"&gt;&lt;span style="font-weight: 400;"&gt;An introduction to Ansible Operators in Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Smk9oQp7YMY"&gt;&lt;span style="font-weight: 400;"&gt;Memcached Ansible Operator Demo&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;a id="references"&gt;&lt;/a&gt;References&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://go.lightstep.com/global-microservices-trends-report-2018"&gt;Global Microservices Trends: a survey of Development Professionals April 2018&lt;/a&gt; &lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Facts and Fallacies of Software Engineering, &lt;/a&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Glass, R , &lt;/a&gt;&lt;a href="https://www.oreilly.com/library/view/facts-and-fallacies/0321117425/"&gt;Addison-Wesley Professional, 2002, p 115&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;Which Factors Affect Software Projects Maintenance Cost More? &lt;/a&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;Dehaghani, S.M.H.,  Hajrahimi, N.&lt;/a&gt;&lt;a href="https://dx.doi.org/10.5455%2FAIM.2012.21.63-66"&gt;, Informatica Medica, 2013&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#38;linkname=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F27%2Fmicroservices-debugging-openshift-kubernetes%2F&amp;#038;title=Solving%20the%20challenges%20of%20debugging%20microservices%20on%20a%20container%20platform" data-a2a-url="https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/" data-a2a-title="Solving the challenges of debugging microservices on a container platform"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/"&gt;Solving the challenges of debugging microservices on a container platform&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WN2mw_EF06Q" height="1" width="1" alt=""/&gt;</content><summary>Microservices have become mainstream in the enterprise. This proliferation of microservices applications generates new problems, which requires a new approach to managing problems. A microservice is a small, independently deployable, and independently scalable software service that is designed to encapsulate a specific semantic function in the larger applicationl. This article explores several app...</summary><dc:creator>Didier Wojciechowski</dc:creator><dc:date>2018-11-27T13:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/27/microservices-debugging-openshift-kubernetes/</feedburner:origLink></entry><entry><title>Announcing: Full Spring Boot support for Red Hat OpenShift Application Runtimes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fYMDjf4bwmY/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="RHOAR" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="Spring Boot" scheme="searchisko:content:tags" /><category term="Spring Cloud" scheme="searchisko:content:tags" /><author><name>James Falkner</name></author><id>searchisko:content:id:jbossorg_blog-announcing_full_spring_boot_support_for_red_hat_openshift_application_runtimes</id><updated>2018-11-26T20:23:23Z</updated><published>2018-11-26T20:23:23Z</published><content type="html">&lt;h2&gt;What Red Hat is providing&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat OpenShift Application Runtimes&lt;/a&gt; (RHOAR) is a recommended set of products, tools, and components for developing and maintaining cloud-native applications on the &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; platform. As part of this offering, Red Hat provides full support for developers using Spring Boot and related frameworks for building modern, production-grade, Java-based cloud-native applications.&lt;/p&gt; &lt;p&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/spring_boot_tomcat_runtime_guide/"&gt;Spring Boot&lt;/a&gt; lets you create opinionated Spring-based standalone applications. The Spring Boot runtime also integrates with the OpenShift platform, allowing your services to externalize their configuration, implement health checks, provide resiliency and failover, and much more. To learn more about how Spring Boot applications integrate with the wider Red Hat portfolio, check out the following OpenShift Commons Briefing by &lt;a href="https://twitter.com/tqvarnst"&gt;Thomas Qvarnstrom&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;span id="more-540867"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/wQ9QSvc0qi8?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;Versioning&lt;/h2&gt; &lt;p&gt;Red Hat is initially supporting Spring Boot &lt;strong&gt;1.5.17 &lt;/strong&gt;on Red Hat OpenShift. Support for Spring Boot 2.1 is planned for early 2019. Spring Boot 2.1 adds additional features and frameworks, but many Spring Boot 1.5.x applications remain in production today, so supporting both is critical for our existing customers and wider development communities.&lt;/p&gt; &lt;h2&gt;Support details&lt;/h2&gt; &lt;p&gt;The Spring ecosystem contains many popular frameworks for building various application types. When used with RHOAR, support from Red Hat is limited to those frameworks primarily targeting modern cloud-native &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservice&lt;/a&gt; applications, along with frameworks originating from upstream open source communities that Red Hat actively participates in or leads. The &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/red_hat_openshift_application_runtimes_release_notes/#maven-artifacts-spring-boot-tested-and-verified"&gt;list on this documentation page&lt;/a&gt; shows exactly what is included, and it will be updated for 1.5.17 in the coming weeks. Red Hat customers can also refer to the &lt;a href="https://access.redhat.com/articles/3710221"&gt;Spring Boot support page on the customer portal&lt;/a&gt; for additional detail.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a quick rundown of the type of support included with this offering:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Configuration support&lt;/strong&gt;. Red Hat will help customers with Spring Boot configuration so it runs properly on OpenShift. This is no different from helping customers properly configure Red Hat products.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Workaround support&lt;/strong&gt;. As with any product, if a Spring Boot application is not working as developers assumed it should, but in reality, it is actually working as defined, then in these cases, Red Hat will work with a customer to help find another means of achieving a solution.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Product integration support&lt;/strong&gt;. RHOAR’s Spring Boot support includes support for many Red Hat–led open source frameworks and platforms. Some examples include &lt;a href="https://openshift.com"&gt;OpenShift&lt;/a&gt;, &lt;a href="https://tomcat.apache.org"&gt;Tomcat&lt;/a&gt;, &lt;a href="http://undertow.io/"&gt;Undertow&lt;/a&gt;, and &lt;a href="https://access.redhat.com/products/red-hat-single-sign-on"&gt;Red Hat Single Sign-On/Keycloak&lt;/a&gt;. This list continues to grow over time as Red Hat continues to integrate Spring Boot with more of Red Hat’s product portfolio.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;New feature requests&lt;/strong&gt;. Red Hat will entertain Red Hat product feature requests to optimize Red Hat product usage with Spring Boot applications. When reasonable to do so, Red Hat will work upstream within the Spring community to advocate on a customer’s behalf for requested Spring Boot functionality.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt;. When bugs have been identified in Spring code, Red Hat will work on addressing those bugs. For non-critical issues, Red Hat will work in the upstream Spring community to address the issue. When an issue is addressed within the Spring community, the fix may be available in a future Spring update. For critical &lt;a href="https://access.redhat.com/support/policy/severity/"&gt;&lt;em&gt;severity 1&lt;/em&gt;&lt;/a&gt; issues that Red Hat can immediately address, Red Hat may provide the customer an immediate fix to get them up and running as quickly as possible while also working to address the issue in the Spring community. Red Hat wants to stay true to the Spring community distribution. For issues that cannot be addressed within the Spring community, Red Hat offers &lt;em&gt;Workaround Support&lt;/em&gt; (see above).&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Additional considerations&lt;/h3&gt; &lt;p&gt;Red Hat provides binaries only for those Spring frameworks that it leads and distributes (for example, Undertow, Hibernate, embedded Tomcat, Keycloak, and Apache CXF). Other components are still distributed via their normal channels (for example, Maven Central). These components are consumed via Spring Boot &lt;em&gt;Starters&lt;/em&gt;.&lt;/p&gt; &lt;h2&gt;Launching into OpenShift&lt;/h2&gt; &lt;p&gt;The following figure shows launching Spring Boot applications into OpenShift:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM.png"&gt;&lt;img class=" aligncenter wp-image-540907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM-1024x515.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM-1024x515.png" alt="Launching Spring Boot Applications into OpenShift" width="640" height="322" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM-1024x515.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.17.25-PM-768x386.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;a href="https://developers.redhat.com/launch"&gt;developers.redhat.com/launch&lt;/a&gt; you can immediately create and deploy a Spring Boot application directly to &lt;a href="http://openshift.com/"&gt;Red Hat OpenShift Online&lt;/a&gt; or to your own local OpenShift cluster. It provides a hassle-free way of creating example applications, called &lt;em&gt;boosters&lt;/em&gt;, as well as an easy way to build and deploy those boosters to OpenShift.&lt;/p&gt; &lt;p&gt;Boosters are available to showcase how developers can use Spring Boot to build fundamental building blocks of cloud-native applications and services, such as creating secured RESTful APIs, implementing health checks, externalizing configuration, or integrating with the OpenShift Service Mesh based on the &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt; project.&lt;/p&gt; &lt;h2&gt;Test driving a sample app using Spring Boot&lt;/h2&gt; &lt;p&gt;Spring Boot is a Java framework, and as such, it can be run using &lt;a href="https://developers.redhat.com/products/openjdk/overview/"&gt;OpenJDK&lt;/a&gt;. Let&amp;#8217;s test drive one of the Spring Boot boosters on OpenShift. (Here I am using the &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;, but any OpenShift cluster will do.) The following is one set of commands you could use to pull the OpenJDK image to your local system for use with Spring Boot:&lt;/p&gt; &lt;pre&gt;oc new-project spring-boot oc import-image java:8 --from=registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift --confirm&lt;/pre&gt; &lt;p&gt;Then, the following commands could be used to build and deploy the Spring Boot application to Red Hat OpenShift:&lt;/p&gt; &lt;pre&gt;oc new-app --name rest-example 'java:8~https://github.com/snowdrop/spring-boot-http-booster#1.5.17-4-redhat' oc expose svc/rest-example&lt;/pre&gt; &lt;p&gt;You can watch the build take place:&lt;/p&gt; &lt;pre&gt;oc logs -f bc/rest-example&lt;/pre&gt; &lt;p&gt;Once the build completes, wait for the deployment to finish:&lt;/p&gt; &lt;pre&gt;oc rollout status -w dc/rest-example&lt;/pre&gt; &lt;p&gt;And then access the sample app&amp;#8217;s UI:&lt;/p&gt; &lt;pre&gt;open http://$(oc get route rest-example -o jsonpath='{.spec.host}{"\n"}')&lt;/pre&gt; &lt;p&gt;Red Hat customers using the OpenJDK distribution to run Spring Boot applications will be able to keep current with the latest updates, security advisories, knowing when and why containers are updated, and remaining up to date on the latest available tagged OpenJDK image.&lt;/p&gt; &lt;h2&gt;Documentation&lt;/h2&gt; &lt;p&gt;The RHOAR team has been continuously adding to and improving the official documentation for developers creating Spring Boot applications. This includes updates in the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/red_hat_openshift_application_runtimes_release_notes/"&gt;Release Notes&lt;/a&gt;, &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/getting_started_with_red_hat_openshift_application_runtimes/"&gt;Getting Started Guide,&lt;/a&gt; and the new &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/spring_boot_runtime_guide/"&gt;Spring Boot Runtime Guide&lt;/a&gt;. (Note that the guide is in the process of being updated for the latest version.)&lt;/p&gt; &lt;h2&gt;Developer interactive learning scenarios&lt;/h2&gt; &lt;p&gt;These &lt;a href="https://learn.openshift.com/middleware/courses/middleware-spring-boot/"&gt;self-paced scenarios&lt;/a&gt; provide you with a pre-configured OpenShift instance, accessible from your browser without any downloads or configuration. Use it to experiment with building Spring Boot applications on OpenShift and building applications with various Spring frameworks and Red Hat technologies. The following figure shows interactive learning scenarios on learn.openshift.com:&lt;/p&gt; &lt;p&gt;&lt;a href="http://learn.openshift.com"&gt;&lt;img class=" aligncenter wp-image-540937 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.27.43-PM-1024x504.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.27.43-PM-1024x504.png" alt="Interactive learning scenarios on learn.openshift.com" width="640" height="315" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.27.43-PM-1024x504.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.27.43-PM-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screen-Shot-2018-11-25-at-4.27.43-PM-768x378.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Getting support for Spring Boot&lt;/h2&gt; &lt;p&gt;Support for Spring Boot is available to Red Hat customers through a subscription to &lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat OpenShift Application Runtimes&lt;/a&gt;. Contact your local Red Hat representative or &lt;a href="https://www.redhat.com/en/about/contact/sales"&gt;Red Hat Sales&lt;/a&gt; for details on how you can enjoy world-class support offered from Red Hat and its worldwide partner network.&lt;/p&gt; &lt;p&gt;Moving forward, customers can expect support for Spring Boot and other RHOAR runtimes according to the &lt;a href="https://access.redhat.com/support/policy/updates/jboss_notes/"&gt;Red Hat Product Update and Support Lifecycle&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What’s next for Spring Boot support?&lt;/h2&gt; &lt;p&gt;The RHOAR Spring Boot team is continually taking &lt;a href="https://issues.jboss.org/projects/SB"&gt;feedback&lt;/a&gt; from customers and the wider community of open source developers, as well as tracking the &lt;a href="https://github.com/spring-projects/spring-boot/releases"&gt;upstream Spring Boot releases&lt;/a&gt;. They are working to make updates to RHOAR based on that feedback, as well as considering support for additional modules from Red Hat and the very large Java community.&lt;/p&gt; &lt;h2&gt;The people behind Red Hat&amp;#8217;s Spring Boot support&lt;/h2&gt; &lt;p&gt;This offering was produced by Red Hat’s RHOAR product and engineering team and involved many hours of development, testing, writing documentation, testing some more, and working with the wider Red Hat community of customers, partners, and Spring developers to incorporate contributions, both big and small. We are glad you have chosen to use it and hope that it meets or exceeds your expectations!&lt;/p&gt; &lt;h2&gt;Spring Boot resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat OpenShift Application Runtimes Developer home page&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/spring_boot_runtime_guide/"&gt;Spring Boot Runtime Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://issues.jboss.org/projects/SB/issues/SB-344?filter=allopenissues"&gt;Spring Boot Issue Tracker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://learn.openshift.com/middleware/courses/middleware-spring-boot/"&gt;Interactive Learning Scenarios for Spring Boot on OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/launch"&gt;RHOAR launcher&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#38;linkname=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fannouncing-full-spring-boot-support-for-red-hat-openshift-application-runtimes%2F&amp;#038;title=Announcing%3A%20Full%20Spring%20Boot%20support%20for%20Red%20Hat%20OpenShift%20Application%20Runtimes" data-a2a-url="https://developers.redhat.com/blog/2018/11/26/announcing-full-spring-boot-support-for-red-hat-openshift-application-runtimes/" data-a2a-title="Announcing: Full Spring Boot support for Red Hat OpenShift Application Runtimes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/26/announcing-full-spring-boot-support-for-red-hat-openshift-application-runtimes/"&gt;Announcing: Full Spring Boot support for Red Hat OpenShift Application Runtimes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fYMDjf4bwmY" height="1" width="1" alt=""/&gt;</content><summary>What Red Hat is providing Red Hat OpenShift Application Runtimes (RHOAR) is a recommended set of products, tools, and components for developing and maintaining cloud-native applications on the Red Hat OpenShift platform. As part of this offering, Red Hat provides full support for developers using Spring Boot and related frameworks for building modern, production-grade, Java-based cloud-native appl...</summary><dc:creator>James Falkner</dc:creator><dc:date>2018-11-26T20:23:23Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/26/announcing-full-spring-boot-support-for-red-hat-openshift-application-runtimes/</feedburner:origLink></entry><entry><title>The Non-complexity of /etc/nsswitch.conf</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3K2ZU84SogE/" /><category term="community" scheme="searchisko:content:tags" /><category term="fedora" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="future" scheme="searchisko:content:tags" /><category term="glibc" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="nsswitch.conf" scheme="searchisko:content:tags" /><category term="opinion" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="upstream" scheme="searchisko:content:tags" /><author><name>DJ Delorie</name></author><id>searchisko:content:id:jbossorg_blog-the_non_complexity_of_etc_nsswitch_conf</id><updated>2018-11-26T12:00:26Z</updated><published>2018-11-26T12:00:26Z</published><content type="html">&lt;p&gt;In most glibc-based operating systems, there&amp;#8217;s a file &lt;tt&gt;/etc/nsswitch.conf&lt;/tt&gt; that most people ignore, few people understand, but all people generally rely on. This file determines where the system finds things like host names, passwords, and protocol numbers. Does your company use LDAP? NIS? Plain files? The nsswitch file (it stands for &amp;#8220;name services switch&amp;#8221;) tells the system what service to use for each type of name lookup.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a snippet from a sample &lt;tt&gt;/etc/nsswitch.conf&lt;/tt&gt; file:&lt;/p&gt; &lt;pre&gt;passwd: files nis group: files nis hosts: files dns myhostname &lt;/pre&gt; &lt;p&gt;In this example, user information (the passwd and group services) come first from &amp;#8220;files&amp;#8221; (like &lt;tt&gt;/etc/passwd&lt;/tt&gt; or &lt;tt&gt;/etc/group)&lt;/tt&gt;, and if no entries are found there, a query to an NIS server (configured elsewhere) will be used. Host information first comes from &lt;tt&gt;/etc/hosts&lt;/tt&gt; (files), then a DNS server (dns), and if neither of those work, at least a fallback of &amp;#8220;myhostname&amp;#8221; so that the local machine has &lt;em&gt;some&lt;/em&gt; name.&lt;/p&gt; &lt;p&gt;The non-complexity comes in the &amp;#8220;and if that doesn&amp;#8217;t work&amp;#8221; rule. When multiple services are listed, they&amp;#8217;re tried in order, and a sevice either succeeds or fails. If it fails, the next is tried, etc. There&amp;#8217;s a way to check for a few other cases (entry not found, or service temporarily unavailable) but the only thing you can do based on those is either try the next service, or don&amp;#8217;t.&lt;/p&gt; &lt;p&gt;This simplicity has already led to one drawback, which is the handling of a user&amp;#8217;s groups when there are both local groups and global (LDAP for example) groups. You wouldn&amp;#8217;t want to have to choose between the two, you&amp;#8217;d rather be allowed into the union of the two sets of groups. The &lt;tt&gt;nsswitch.conf&lt;/tt&gt; syntax has a special case for that:&lt;/p&gt; &lt;pre&gt;groups: files [SUCCESS=merge] ldap &lt;/pre&gt; &lt;p&gt;Normally, a successful lookup would terminate the lookup and return a value. This special case says that even if the &amp;#8220;files&amp;#8221; lookup worked, try the &amp;#8220;ldap&amp;#8221; service &lt;em&gt;also&lt;/em&gt; and merge the two lists of groups together. Another special case has come up recently, with systemd providing some services for the local machine. The problem here is &amp;#8220;local machine&amp;#8221; &amp;#8211; it doesn&amp;#8217;t provide global services, but the nsswitch syntax doesn&amp;#8217;t allow for &amp;#8220;delegation&amp;#8221;. If the systemd service doesn&amp;#8217;t find a record, is that &amp;#8220;not found&amp;#8221; authoritative?&lt;/p&gt; &lt;p&gt;And what if you wanted different services for different domains? Currently, your only option is to configure a local DNS server that has all the logic for domain delegation, and refer to that in &lt;tt&gt;nsswitch.conf&lt;/tt&gt;. That only works if the DNS server is running, which may not be the case when the machine is first booting, and may not be easy to configure when you change networks (wifi? vpn?).&lt;/p&gt; &lt;p&gt;So what&amp;#8217;s the point of this article? I&amp;#8217;ve been contemplating the non-complexity of this file, and wondering what its future might contain. What if you could select services based on a pattern match of the search string? What if it could test for outside conditions like time of day, or VPNs? What if your corporate security rules required a more deterministic failure mode? I&amp;#8217;m not suggesting &lt;tt&gt;nsswitch.conf&lt;/tt&gt; become some full programming language (&lt;tt&gt;nsswitch.py&lt;/tt&gt; anyone? &lt;img src="https://s.w.org/images/core/emoji/2.4/72x72/1f609.png" alt="" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt; but if it had &lt;em&gt;some&lt;/em&gt; decision-making syntax beyond what it already has, what would it look like? What kinds of problems would it solve? Do &lt;em&gt;you&lt;/em&gt; have any problems that could be solved by a more flexible &lt;tt&gt;nsswitch.conf&lt;/tt&gt;? If so, share them in the comments below!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#38;linkname=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F26%2Fetc-nsswitch-conf-non-complexity%2F&amp;#038;title=The%20Non-complexity%20of%20%2Fetc%2Fnsswitch.conf" data-a2a-url="https://developers.redhat.com/blog/2018/11/26/etc-nsswitch-conf-non-complexity/" data-a2a-title="The Non-complexity of /etc/nsswitch.conf"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/26/etc-nsswitch-conf-non-complexity/"&gt;The Non-complexity of /etc/nsswitch.conf&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3K2ZU84SogE" height="1" width="1" alt=""/&gt;</content><summary>In most glibc-based operating systems, there’s a file /etc/nsswitch.conf that most people ignore, few people understand, but all people generally rely on. This file determines where the system finds things like host names, passwords, and protocol numbers. Does your company use LDAP? NIS? Plain files? The nsswitch file (it stands for “name services switch”) tells the system what service to use for ...</summary><dc:creator>DJ Delorie</dc:creator><dc:date>2018-11-26T12:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/26/etc-nsswitch-conf-non-complexity/</feedburner:origLink></entry></feed>
